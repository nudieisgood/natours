.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: $shadow-6;
  background-color: rgba($color-white, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: $default-font-size;
  transform: skewX(-12deg);

  @include respond(md) {
    width: 100%;
    padding: 4rem;
    padding-left: 6rem;
  }

  @include respond(sm) {
    transform: skewX(0);
  }

  &__shape {
    width: 15rem;
    height: 15rem;
    background-color: orangered;
    float: left;
    //第一個為radius arg / at 正中心 of shape
    //達成自繞著圓的效果
    shape-outside: circle(50% at 50% 50%);
    //將shape 切成圓形
    clip-path: circle(50% at 50% 50%);
    // 這裡用此方法只有__text能apply, 因為__shape自己有
    // transform 故我們要手動對 __text _shape加入 skew
    transform: translateX(-3rem) skewX(12deg);

    @include respond(sm) {
      transform: translateX(-3rem) skewX(0);
    }
  }

  &__text {
    transform: skewX(12deg);

    @include respond(sm) {
      transform: skewX(0);
    }
  }

  &__img {
    //100% of parent(stroy__shape)
    //沒的話img會是圖片自己的大小
    height: 100%;
    //translateX(-4rem)為了將圖片center 微調
    //scale(1.4) 先放大 hover story後 scale(1)
    transform: translateX(-4rem) scale(1.4);
    transition: all 0.5s;
  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    //地位時約定位在中下 這樣在hover 可以有回到中間的效果
    transform: translate(-50%, 20%);
    color: $color-white;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;

    //hover前 透明
    opacity: 0;
    transition: all 0.5s;
  }

  //story hover時 story__caption{}
  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -50%);
  }

  &:hover &__img {
    transform: translateX(-4rem) scale(1);
    //霧化效果
    filter: blur(3px) brightness(80%);
  }
}
